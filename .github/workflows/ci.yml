# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

# 定义触发工作流的事件
on:
  push:
    branches: [ "main" ] # 推送到 main 分支
  pull_request:
    branches: [ "main" ] # 合并到 main 分支的请求

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest # 该工作流允许的操作系统

    services: # 运行服务
      postgres:
        image: postgres:15 # docker 镜像
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: 123456
          POSTGRES_DB: simple_bank
        options: >- # 健康检查，postgres 是否正常启动
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3 # 复用官方提供的操作，仓库代码部署到运行器中

    - name: Set up Go
      uses: actions/setup-go@v3 # 安装 go
      with:
        go-version: 1.20.2

    - name: Set up migrate
      run: | # 使用管道符声明使用多行命令
        go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
        which migrate

    - name: Run migrations
      run: make migrateup

    - name: Test
      run: make test
